# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: de_DE

    liip_imagine.mozjpeg.binary: /src/mozjpeg/cjpeg

    sylius.form.type.product.validation_groups: [app_product]

    root_administrator_email: '%env(ADMIN_EMAIL)%'

    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{EventListener,Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    App\EventListener\AdminProductsGridProductBundlePluginListener:
        tags:
            - { name: kernel.event_listener, event: sylius.grid.admin_product, method: addProductBunldeMainAction }
            - { name: kernel.event_listener, event: sylius.grid.admin_product_from_taxon, method: addProductBunldeMainAction }

    App\EventListener\ImagesUploadListener:
        tags:
            - { name: kernel.event_listener, event: sylius.product.post_create, method: produceLiipImagineResolveAllCacheMessages }
            - { name: kernel.event_listener, event: sylius.product.post_update, method: produceLiipImagineResolveAllCacheMessages }
            - { name: kernel.event_listener, event: sylius.taxon.post_create, method: produceLiipImagineResolveAllCacheMessages }
            - { name: kernel.event_listener, event: sylius.taxon.post_update, method: produceLiipImagineResolveAllCacheMessages }

    app.form.extension.type.product_variant_generation:
        class: App\Form\Extension\ProductVariantGenerationTypeExtension
        tags:
            - { name: form.type_extension, extended_type: Sylius\Bundle\ProductBundle\Form\Type\ProductVariantGenerationType }

    App\Form\Extension\TermsTranslationTypeExtension:
        tags:
            - { name: form.type_extension, extended_type: Setono\SyliusTermsPlugin\Form\Type\TermsTranslationType, priority: -1 }

    liip_imagine.cache.manager:
        class: App\Service\CacheManager\ImageCacheManager
        arguments:
            - '@liip_imagine.filter.configuration'
            - '@router'
            - '@liip_imagine.cache.signer'
            - '@event_dispatcher'
            - '%liip_imagine.cache.resolver.default%'

    liip_imagine.filter.loader.thumbnail:
        class: App\Imagine\Filter\Loader\ThumbnailFilterLoader
        tags:
            - { name: liip_imagine.filter.loader, loader: thumbnail }

    monsieurbiz_sylius_search.block_event_listener.layout.topbar:
        class: Sylius\Bundle\UiBundle\Block\BlockEventListener
        arguments:
            - '@@MonsieurBizSyliusSearchPlugin/Topbar/_searchWidget.html.twig'
        tags:
            - { name: kernel.event_listener, event: sylius.shop.layout.topbar, method: onBlockEvent }

    # TODO: Remove when elastically_index_class_mapping is configurable
    JoliCode\Elastically\Client:
        arguments:
            $config:
                host: '%env(MONSIEURBIZ_SEARCHPLUGIN_ES_HOST)%'
                port: '%env(MONSIEURBIZ_SEARCHPLUGIN_ES_PORT)%'
                elastically_mappings_directory: '%kernel.project_dir%/vendor/monsieurbiz/sylius-search-plugin/src/Resources/config/elasticsearch/mappings'
                elastically_index_class_mapping:
                    documents-de_de: \MonsieurBiz\SyliusSearchPlugin\Model\Document\Result
                    documents-de: \MonsieurBiz\SyliusSearchPlugin\Model\Document\Result
                    documents-fr_fr: \MonsieurBiz\SyliusSearchPlugin\Model\Document\Result
                    documents-fr: \MonsieurBiz\SyliusSearchPlugin\Model\Document\Result
                    documents-en: \MonsieurBiz\SyliusSearchPlugin\Model\Document\Result
                    documents-en_us: \MonsieurBiz\SyliusSearchPlugin\Model\Document\Result
                elastically_bulk_size: 100

    Odiseo\SyliusRbacPlugin\Access\Checker\RouteNameCheckerInterface:
        class: App\Access\Checker\HardcodedRouteNameChecker

    sylius_archivable_products_plugin.entity_listener.product_variant:
        class: App\EntityListener\SearchAwareProductVariantEntityListener
        arguments:
            - '@MonsieurBiz\SyliusSearchPlugin\Model\Document\Index\Indexer'
        tags:
            - { name: doctrine.orm.entity_listener, entity: Sylius\Component\Core\Model\ProductVariant, event: preUpdate }
